{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","items","isLoaded","fetch","then","res","json","setState","this","className","map","item","id","name","email","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAgDeA,E,kDA7Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,UAAU,GAJK,E,qDAQnB,WAAqB,IAAD,OAElBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CACZL,UAAU,EACVD,MAAOK,S,oBASf,WACE,IAAI,EAAsBE,KAAKR,MAAzBE,EAAN,EAAMA,SAAUD,EAAhB,EAAgBA,MAChB,OAAKC,EAKD,qBAAKO,UAAU,MAAf,SACE,+BACGR,EAAMS,KAAI,SAAAC,GAAI,OACb,+BACGA,EAAKC,GADR,UACmBD,EAAKE,KADxB,aACwCF,EAAKG,QADpCH,EAAKC,OAFlB,SALG,mD,GA5BKG,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f1f5d878.chunk.js","sourcesContent":["import react, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n    }\n  }\n\n  componentDidMount() {\n    //Actual API code\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json,\n          //getting the data from API\n          //save data inside app component/ inside astates, so we can reuse it inside the component\n        })\n      });\n  }\n\n  //render method is responsible for producing the output of application\n  //after render menthod the componentDidMount method will run\n  render() {\n    var { isLoaded, items } = this.state;\n    if (!isLoaded) {\n      return <div>Loading.....</div>;\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <ul>\n            {items.map(item => (\n              <li key={item.id}>\n                {item.id} Name: {item.name} | Email: {item.email}\n              </li>\n            ))};\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}